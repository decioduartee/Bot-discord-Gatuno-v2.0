{"version":3,"sources":["../src/services/search-service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,0BAAsD;AACtD,kCAA+B;AAE/B;;GAEG;AACH,MAAa,aAAa;IACxB,0BAA0B;IACnB,MAAM,CAAO,MAAM,CAAE,OAAgB,EAAE,KAA0D,EAAE,UAAkB,EAAE,aAAqB,EAAE,EAAE,SAAkB;;YAEvK,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACrF,MAAM,MAAM,GAAG,YAAK,CAAC,GAAG,CAAC,YAAY,IAAI,KAAK,UAAU,KAAK,UAAU,KAAK,SAAS,GAAG,CAAC,CAAA;YAEzF,IAAI,OAAO,CAAC,YAAY,IAAI,MAAM,EAAE;gBAClC,OAAO,MAAM,CAAA;aACd;YAED,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,EAAE,EAAE;gBACrC,OAAO,OAAO,CAAC,MAAM,CAAC,iEAAiE,CAAC,CAAA;aACzF;YAED,MAAM,MAAM,GAAG,wGAAwG,CAAA;YACvH,MAAM,IAAI,GAON;gBACF,CAAC,EAAE,kBAAkB,CAAC,UAAU,CAAC;gBACjC,MAAM,EAAE,kBAAkB,CAAC,MAAM,CAAC;gBAClC,UAAU;gBACV,IAAI,EAAE,SAAS;gBACf,IAAI;aACL,CAAA;YAED,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;aAC3B;YAED,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,CAAA;YAC7F,MAAM,KAAK,GAAG,EAAE,CAAA;YAEhB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC3B,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;oBACnB,KAAK,CAAC,IAAI,CAAC,IAAI,SAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;iBACrC;qBAAM,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,WAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;iBACvC;qBAAM,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE;oBAC7B,KAAK,CAAC,IAAI,CAAC,IAAI,YAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;iBACxC;YACH,CAAC,CAAC,CAAA;YAEF,MAAM,QAAQ,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,aAAa,EAAE,OAAO,CAAC,aAAa,EAAE,CAAA;YAE/G,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,cAAc,EAAE;gBAClD,OAAO,CAAC,MAAM,CAAC,YAAY,IAAI,KAAK,UAAU,KAAK,UAAU,KAAK,SAAS,GAAG,EAAE,QAAQ,CAAC,CAAA;aAC1F;YAED,OAAO,QAAQ,CAAA;QACjB,CAAC;KAAA;CACF;AAxDD,sCAwDC","file":"search-service.js","sourcesContent":["import YouTube, { Video, Channel, Playlist } from '..'\r\nimport { Cache } from '../util'\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class SearchService {\r\n  /* istanbul ignore next */\r\n  public static async search (youtube: YouTube, types: (typeof Video | typeof Channel | typeof Playlist)[], searchTerm: string, maxResults: number = 10, pageToken?: string):\r\n  Promise<{ results: (Video | Channel | Playlist)[], prevPageToken: string, nextPageToken: string }> {\r\n    const type = types.map(t => t.endpoint.substring(0, t.endpoint.length - 1)).join(',')\r\n    const cached = Cache.get(`search://${type}/\"${searchTerm}\"/${maxResults}/\"${pageToken}\"`)\r\n\r\n    if (youtube._shouldCache && cached) {\r\n      return cached\r\n    }\r\n\r\n    if (maxResults < 1 || maxResults > 50) {\r\n      return Promise.reject('Max results must be greater than 0 and less than or equal to 50')\r\n    }\r\n\r\n    const fields = 'prevPageToken,nextPageToken,items(kind,id,snippet(title,description,thumbnails,publishedAt,channelId))'\r\n    const data: {\r\n      q: string,\r\n      fields: string\r\n      maxResults: number,\r\n      part: string,\r\n      type: string,\r\n      pageToken?: string\r\n    } = {\r\n      q: encodeURIComponent(searchTerm),\r\n      fields: encodeURIComponent(fields),\r\n      maxResults,\r\n      part: 'snippet',\r\n      type\r\n    }\r\n\r\n    if (pageToken) {\r\n      data.pageToken = pageToken\r\n    }\r\n\r\n    const results = await youtube._request.api('search', data, youtube.token, youtube._tokenType)\r\n    const items = []\r\n\r\n    results.items.forEach(item => {\r\n      if (item.id.videoId) {\r\n        items.push(new Video(youtube, item))\r\n      } else if (item.id.channelId) {\r\n        items.push(new Channel(youtube, item))\r\n      } else if (item.id.playlistId) {\r\n        items.push(new Playlist(youtube, item))\r\n      }\r\n    })\r\n\r\n    const toReturn = { results: items, prevPageToken: results.prevPageToken, nextPageToken: results.nextPageToken }\r\n\r\n    if (youtube._shouldCache && youtube._cacheSearches) {\r\n      youtube._cache(`search://${type}/\"${searchTerm}\"/${maxResults}/\"${pageToken}\"`, toReturn)\r\n    }\r\n\r\n    return toReturn\r\n  }\r\n}\r\n"],"sourceRoot":"../../src"}