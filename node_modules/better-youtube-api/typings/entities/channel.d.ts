import { YouTube, Playlist, Thumbnail, Banners } from '..';
import { YTComment } from './comment';
/**
 * A YouTube channel.
 */
export declare class Channel {
    /**
     * The name of the endpoint used for this entity.
     */
    static endpoint: string;
    /**
     * The parts to request for this entity.
     */
    static part: string;
    /**
     * The fields to request for this entity.
     */
    static fields: string;
    /**
     * The YouTube object that created this channel object.
     */
    youtube: YouTube;
    /**
     * Whether or not this a full channel object.
     */
    full: boolean;
    /**
     * The raw data of this channel.
     */
    data: any;
    /**
     * The name of this channel.
     */
    name: string;
    /**
     * The description of this channel.
     */
    about: string;
    /**
     * The ID of this channel.
     */
    id: string;
    /**
     * The country this channel is based in.
     */
    country: string;
    /**
     * The url of the channel.
     */
    url: string;
    /**
     * This channel's custom URL, if they have one.
     */
    customUrl: string;
    /**
     * This channel's profile pictures.
     */
    profilePictures: {
        default?: Thumbnail;
        high?: Thumbnail;
        maxres?: Thumbnail;
        medium?: Thumbnail;
        standard?: Thumbnail;
    };
    /**
     * This channel's banners.
     */
    banners: Banners;
    /**
     * The date this channel was created.
     */
    dateCreated: Date;
    /**
     * The default language for this channel's uploads.
     */
    language: string;
    /**
     * This channel's view count.
     */
    views: number;
    /**
     * This channel's keywords.
     */
    keywords: string[];
    /**
     * The channel's uploads. Only available after calling `Channel#fetchVideos()`
     */
    videos: Playlist;
    /**
     * The number of subscribers this channel has. `-1` if the subcount is hidden.
     */
    subCount: number;
    /**
     * This channel's comment count.
     */
    commentCount: number;
    /**
     * The channel's comments. Only defined when `Channel#fetchComments` is called.
     */
    comments: YTComment[];
    /**
     * The URLs of all of this channel's featured channels.
     */
    featuredChannels: string[];
    /**
     * The channel's playlists. Only defined when `Channel#fetchPlaylists` is called.
     */
    playlists: Playlist[];
    /**
     * Only set if the channel is a search result.
     *
     * If the channel has an ongoing livestream, this is `live`.
     * If the channel has an upcoming livestream, this is `upcoming`.
     * If the channel has neither an ongoing nor upcoming livestream, this is `false`.
     */
    liveStatus: 'live' | 'upcoming' | false;
    constructor(youtube: YouTube, data: any);
    /**
     * @ignore
     */
    private _init;
    /**
     * Posts a comment on the channel's discussion tab.
     * Must be using an access token with correct scopes.
     * @param text The text of the comment.
     */
    postComment(text: string): Promise<YTComment>;
    /**
     * Fetches this channel and reassigns this object to the new channel object.
     * Only useful if `this.full` is false, or if you want updated channel info.
     */
    fetch(): Promise<this & Channel>;
    /**
     * Fetches the channel's videos and assigns them to the `Channel#videos` property.
     */
    fetchVideos(): Promise<Playlist>;
    /**
     * Fetches the channel's discussion tab comments and assigns them to Channel#comments.
     * @param maxResults The maximum amount of comments to fetch
     */
    fetchComments(maxResults?: number): Promise<YTComment[]>;
    /**
     * Fetches the channel's playlists and assigns them to Channel#playlists.
     * @param maxResults The maximum amount of playlists to fetch
     */
    fetchPlaylists(maxResults?: number): Promise<Playlist[]>;
}
